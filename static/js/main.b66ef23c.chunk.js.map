{"version":3,"sources":["web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","App","state","manager","players","balance","value","message","lastWinner","isManager","onSubmit","e","a","preventDefault","getAccounts","accounts","setState","lottery","methods","enter","send","from","utils","toWei","onClick","pickWinner","call","getPlayers","getBalance","options","address","this","length","fromWei","onChange","target","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b66ef23c.chunk.js","sourcesContent":["import Web3 from \"web3\";\n \nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\n \nconst web3 = new Web3(window.ethereum);\n \nexport default web3;","import web3 from \"./web3\";\n\nconst address = '0x479A2FcDb5eA20095Bd0bFD4CC62296b38B7835b';\n\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pickWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}];\n\n// set up a local copy of contract that refers to correct address on Rinkeby network\nexport default new web3.eth.Contract(abi, address);","import React from \"react\";\nimport \"./App.css\";\nimport web3 from './web3';\nimport lottery from \"./lottery\";\n\nclass App extends React.Component {\n  state = { \n    manager: '',\n    players: [],\n    balance: '',\n    value: '',\n    message: '',\n    lastWinner: '',\n    isManager: false,\n  };\n\n  async componentDidMount() {\n    // dont have to specify \"from\" field when using metamask provider\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ \n      manager,\n      players,\n      balance,\n      isManager: manager === accounts[0]\n    });\n  }\n\n  onSubmit = async(e) => {\n    e.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: 'Waiting on transaction success...' });\n    \n    await lottery.methods.enter().send({\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, 'ether')\n    });\n\n    this.setState({ message: 'You have been entered! ' });\n  }\n\n  onClick = async() => {\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: 'Waiting on transaction success...' });\n    \n    await lottery.methods.pickWinner().send({\n      from: accounts[0]\n    });\n\n    const lastWinner = await lottery.methods.lastWinner().call();\n\n    this.setState({ message: `The winner is ${lastWinner}` });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Lottery Contract</h2>\n        <p>\n          This contract is managed by {this.state.manager}.\n          There are currently {this.state.players.length} people entered, \n          competing to win {web3.utils.fromWei(this.state.balance, 'ether')} ether! \n        </p>\n\n        <hr />\n\n        <form onSubmit={this.onSubmit}>\n          <h4>Want to try your luck? </h4>\n          <div>\n            <label>Amount of ether to enter</label>\n            <input\n              value={this.state.value}\n              onChange={e => this.setState({ value: e.target.value })}\n            />\n          </div>\n          <button>\n            Enter\n          </button>\n        </form>\n\n        <hr />\n        {\n          this.state.isManager && (\n            <>\n              <h4>Ready to pick a winner? </h4>\n              <button onClick={this.onClick}>Pick a winner!</button>\n              <hr />\n            </>\n          )\n        }\n\n        <h1>{this.state.message}</h1>\n\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}